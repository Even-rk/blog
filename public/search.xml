<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>项目中的（剪切板）vue/react</title>
      <link href="/2021-01-12/copy/"/>
      <url>/2021-01-12/copy/</url>
      
        <content type="html"><![CDATA[<p>在开发项目的时候，往往有个别项目需求，一段内容需要当点复制的时候，可以复制这段内容，直接到自己手机或者电脑的剪切板，可以方便的实现复制，而不是，需要拖拽选中的实现 cv ，实现复制，可以使用一些第三方的插件来实现。</p><p>下面分别是vue2，vue3 和react的实现方法</p><h1 id="Vue2"><a href="#Vue2" class="headerlink" title="Vue2"></a>Vue2</h1><h4 id="1：安装-vue-clipboard2"><a href="#1：安装-vue-clipboard2" class="headerlink" title="1：安装 vue-clipboard2"></a>1：安装 vue-clipboard2</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># npm</span></span><br><span class="line">npm install vue-clipboard2</span><br><span class="line"><span class="comment"># yarn</span></span><br><span class="line">yarn add vue-clipboard2</span><br><span class="line"><span class="comment"># pnpm </span></span><br><span class="line">pnpm install vue-clipboard2</span><br></pre></td></tr></table></figure><h4 id="2：在main-js中注册"><a href="#2：在main-js中注册" class="headerlink" title="2：在main.js中注册"></a>2：在main.js中注册</h4><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">Vue</span> <span class="keyword">from</span> <span class="string">&quot;vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&quot;./App.vue&quot;</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="title class_">VueClipboard</span> <span class="keyword">from</span> <span class="string">&quot;vue-clipboard2&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Vue</span>.<span class="title function_">use</span>(<span class="title class_">VueClipboard</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">  <span class="attr">render</span>: <span class="function">(<span class="params">h</span>) =&gt;</span> <span class="title function_">h</span>(<span class="title class_">App</span>)</span><br><span class="line">&#125;).$mount(<span class="string">&quot;#app&quot;</span>);</span><br></pre></td></tr></table></figure><h4 id="3：组件中使用"><a href="#3：组件中使用" class="headerlink" title="3：组件中使用"></a>3：组件中使用</h4><p>在组件中使用有两种方法</p><ul><li>直接将变量内容复制至剪切板</li></ul><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- v-clipboard:copy 绑定需要被复制的内容 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- v-clipboard:success 绑定成功的回调 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- v-clipboard:error 绑定失败的回调 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span></span></span><br><span class="line"><span class="tag">      <span class="attr">type</span>=<span class="string">&quot;button&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">v-clipboard:copy</span>=<span class="string">&quot;msg&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">v-clipboard:success</span>=<span class="string">&quot;success&quot;</span></span></span><br><span class="line"><span class="tag">      <span class="attr">v-clipboard:error</span>=<span class="string">&quot;error&quot;</span></span></span><br><span class="line"><span class="tag">    &gt;</span></span><br><span class="line">      复制</span><br><span class="line">    <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">  data () &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">msg</span>: <span class="string">&#x27;Copy These Text&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 复制成功的函数</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">success</span>(<span class="params">e</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">alert</span>(<span class="string">&#x27;复制成功&#x27;</span>, e.<span class="property">text</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;,</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 复制失败的函数</span></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">error</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="title function_">alert</span>(<span class="string">&#x27;复制失败&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>VUE响应函数方式</li></ul><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;onCopy&quot;</span>&gt;</span>复制<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span></span><br><span class="line"><span class="language-javascript">  data () &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="attr">msg</span>: <span class="string">&#x27;Copy These Text&#x27;</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;,</span></span><br><span class="line"><span class="language-javascript">  <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">async</span> onCopy () &#123;</span></span><br><span class="line"><span class="language-javascript">      <span class="keyword">try</span> &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">const</span> copyRes = <span class="keyword">await</span> <span class="variable language_">this</span>.$copyText(<span class="variable language_">this</span>.<span class="property">msg</span>)</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">alert</span>(<span class="string">&#x27;复制成功&#x27;</span>, copyRes.<span class="property">text</span>)</span></span><br><span class="line"><span class="language-javascript">      &#125; <span class="keyword">catch</span> (error) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">alert</span>(<span class="string">&#x27;复制失败&#x27;</span>, error)</span></span><br><span class="line"><span class="language-javascript">      &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="Vue3"><a href="#Vue3" class="headerlink" title="Vue3"></a>Vue3</h1><p>vue3中的相对vue2就简单了很多</p><h4 id="1：安装-vue-clipboard2-1"><a href="#1：安装-vue-clipboard2-1" class="headerlink" title="1：安装 vue-clipboard2"></a>1：安装 vue-clipboard2</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># npm</span></span><br><span class="line">npm install vue-clipboard3</span><br><span class="line"><span class="comment"># yarn</span></span><br><span class="line">yarn add vue-clipboard3</span><br><span class="line"><span class="comment"># pnpm </span></span><br><span class="line">pnpm install vue-clipboard3</span><br></pre></td></tr></table></figure><h4 id="2：直接在组件中使用"><a href="#2：直接在组件中使用" class="headerlink" title="2：直接在组件中使用"></a>2：直接在组件中使用</h4><p>示例代码</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;Copy&quot;</span>&gt;</span>复制链接<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript">  <span class="comment">// 这是使用了setup语法糖</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">import</span> useClipboard <span class="keyword">from</span> <span class="string">&#x27;vue-clipboard3&#x27;</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> <span class="title function_">Copy</span> = (<span class="params"></span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="title function_">copy</span>(<span class="string">&#x27;拷贝内容&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> &#123; toClipboard &#125; = <span class="title function_">useClipboard</span>()</span></span><br><span class="line"><span class="language-javascript"><span class="comment">// meg接收到的就是需要拷贝的内容</span></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">const</span> <span class="title function_">copy</span> = <span class="keyword">async</span> (<span class="params">msg</span>) =&gt; &#123;</span></span><br><span class="line"><span class="language-javascript">  <span class="keyword">try</span> &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">await</span> <span class="title function_">toClipboard</span>(msg)</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">alert</span>(<span class="string">&#x27;拷贝成功&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">  &#125; <span class="keyword">catch</span> (error) &#123;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">alert</span>(<span class="string">&#x27;复制失败&#x27;</span>, error)</span></span><br><span class="line"><span class="language-javascript">  &#125;</span></span><br><span class="line"><span class="language-javascript">&#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="React"><a href="#React" class="headerlink" title="React"></a>React</h1><h4 id="1：安装-react-copy-to-clipboard"><a href="#1：安装-react-copy-to-clipboard" class="headerlink" title="1：安装 react-copy-to-clipboard"></a>1：安装 react-copy-to-clipboard</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># npm</span></span><br><span class="line">npm install react-copy-to-clipboard</span><br><span class="line"><span class="comment"># yarn</span></span><br><span class="line">yarn add react-copy-to-clipboard</span><br><span class="line"><span class="comment"># pnpm </span></span><br><span class="line">pnpm install react-copy-to-clipboard</span><br></pre></td></tr></table></figure><h4 id="2：直接在组件中使用-1"><a href="#2：直接在组件中使用-1" class="headerlink" title="2：直接在组件中使用"></a>2：直接在组件中使用</h4><figure class="highlight jsx"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; <span class="title class_">CopyToClipboard</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;react-copy-to-clipboard&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">function</span> <span class="title function_">App</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> (</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;<span class="name">CopyToClipboard</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">text</span>=<span class="string">&#123;</span>&#x27;<span class="attr">需要复制的内容</span>&#x27;&#125;</span></span></span><br><span class="line"><span class="tag"><span class="language-xml">        <span class="attr">onCopy</span>=<span class="string">&#123;()</span> =&gt;</span> &#123;</span></span><br><span class="line"><span class="language-xml">          alert(&#x27;复制成功&#x27;)</span></span><br><span class="line"><span class="language-xml">        &#125;&#125;</span></span><br><span class="line"><span class="language-xml">      &gt;</span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">button</span>&gt;</span>复制<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">      <span class="tag">&lt;/<span class="name">CopyToClipboard</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>js数字精度问题的处理</title>
      <link href="/2020-09-17/digital-accuracy/"/>
      <url>/2020-09-17/digital-accuracy/</url>
      
        <content type="html"><![CDATA[<p>在JavaScript中，计算两个十进制的和，它是把十进制转换成二进制来进行运算的，运算的结果在转换为十进制，对于整数来说可以很轻易转化成十进制或者二进制。但是对于一个浮点数来说，因为小数点的存在，小数点的位置不是固定的。这个时候就会出现精度丢失的问题</p><h2 id="场景复现"><a href="#场景复现" class="headerlink" title="场景复现"></a>场景复现</h2><p>我们在计算 0.1 + 0.1 的到的结果是 0.2，但是计算 0.1 + 0.2 的结果并不是0.3，而是0.30000000000000004</p><p><img src="http://lc-u11pv6wa.cn-n1.lcfile.com/vr9H1NqIpnc0CpmINSeTr7JOycCRbdLe/number.jpg" alt="image"></p><p>你可能会期望输出结果为0.3，但实际上由于浮点数表示的限制，结果会有微小的误差。</p><h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><h3 id="1-parentFloat-xxx-toPrecision-xx"><a href="#1-parentFloat-xxx-toPrecision-xx" class="headerlink" title="1 : parentFloat(xxx.toPrecision(xx))"></a>1 : parentFloat(xxx.toPrecision(xx))</h3><p>我们可以使用 js 内置的方法 <code>toPrecision</code> 凑整后再使用<code>parentFloat</code></p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> parse = <span class="built_in">parseFloat</span>(<span class="number">0.30000000000000004</span>.<span class="title function_">toPrecision</span>(<span class="number">12</span>))</span><br><span class="line">consloe.<span class="title function_">log</span>(parse)  <span class="comment">// 0.3</span></span><br></pre></td></tr></table></figure><p>可以单封封装一个函数用于复用</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">precision</span>(<span class="params">num, parse</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">parseFloat</span>(num.<span class="title function_">toPrecision</span>(parse));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">precision</span>(<span class="number">1.6385000000000001</span>, <span class="number">1</span>) <span class="comment">// 2</span></span><br><span class="line"><span class="title function_">precision</span>(<span class="number">1.6385000000000001</span>, <span class="number">2</span>) <span class="comment">// 1.6</span></span><br><span class="line"><span class="title function_">precision</span>(<span class="number">1.6385000000000001</span>, <span class="number">3</span>) <span class="comment">// 1.64</span></span><br></pre></td></tr></table></figure><h3 id="2-toFixed"><a href="#2-toFixed" class="headerlink" title="2 : toFixed()"></a>2 : toFixed()</h3><p>toFixed() 方法使用定点数表示法来格式化一个数字，返回值为String类型。</p><p>以下是一个使用<code>toFixed()</code>函数解决精度丢失问题的示例:</p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> num = <span class="number">0.1</span> + <span class="number">0.2</span>;</span><br><span class="line"><span class="keyword">const</span> parse = num.<span class="title function_">toFixed</span>(<span class="number">1</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(parse); <span class="comment">// 输出结果为 &quot;0.3&quot;</span></span><br></pre></td></tr></table></figure><h3 id="3-第三方数字运算库-推荐"><a href="#3-第三方数字运算库-推荐" class="headerlink" title="3 : 第三方数字运算库(推荐)"></a>3 : 第三方数字运算库(推荐)</h3><p><a href="https://github.com/MikeMcl/bignumber.js">bignumber.js</a>，<a href="https://github.com/MikeMcl/decimal.js">decimal.js</a>，以及<a href="https://github.com/MikeMcl/big.js">big.js</a>等 </p><h2 id="在JavaScript中，精度问题是无法完全避免的，但可以通过上述方法来尽可能地减少误差。"><a href="#在JavaScript中，精度问题是无法完全避免的，但可以通过上述方法来尽可能地减少误差。" class="headerlink" title="在JavaScript中，精度问题是无法完全避免的，但可以通过上述方法来尽可能地减少误差。"></a>在JavaScript中，精度问题是无法完全避免的，但可以通过上述方法来尽可能地减少误差。</h2>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>使用hexo部署个人博客网站</title>
      <link href="/2020-07-31/blog-building/"/>
      <url>/2020-07-31/blog-building/</url>
      
        <content type="html"><![CDATA[<p><strong>Hexo是一款基于Node.js的静态博客框架，搭建静态博客网页，因为是静态的，所以加载也会比较的快，可以进入<a href="https://hexo.io/zh-cn/">hexo官网</a>进行详细查看</strong></p><h1 id="Hexo的具体部署步骤"><a href="#Hexo的具体部署步骤" class="headerlink" title="Hexo的具体部署步骤"></a>Hexo的具体部署步骤</h1><h2 id="1：安装git"><a href="#1：安装git" class="headerlink" title="1：安装git"></a>1：安装git</h2><p> 首先需要安装git，mac本的话，一般都是有自带git的，windows电脑可以前往<a href="https://gitforwindows.org/">git官网</a>，直接下载</p><p><img src="http://lc-u11pv6wa.cn-n1.lcfile.com/h19WgcmELC724rTUWIvVt1oI9WNstMbE/git-v.jpg" alt="image"></p><p>终端执行git -v查看版本，能查看到就是git已经安装好了</p><h2 id="2：安装node环境"><a href="#2：安装node环境" class="headerlink" title="2：安装node环境"></a>2：安装node环境</h2><p>这里选择适合自己电脑系统的安装就可以，<a href="https://nodejs.org/en/download">node官网</a>，选择LTS最新版本即可</p><p><img src="http://lc-u11pv6wa.cn-n1.lcfile.com/4DFwYmGgPS3xKRLXxykRf9dpVtkJGDhu/node.jpg" alt="image"></p><p>启动终端查看node 和 npm 版本</p><p><img src="http://lc-u11pv6wa.cn-n1.lcfile.com/s22p2VXGWoLHwebiFACm4GD1PvXQYAHz/node-v.jpg" alt="image"></p><p>我这里用的是node是 18.16.0版本的 npm 是 9.5.1</p><p>npm 是node自带的一个第三方包管理器（不了解知道怎么用就好）</p><h2 id="3：安装-Hexo-脚手架"><a href="#3：安装-Hexo-脚手架" class="headerlink" title="3：安装 Hexo 脚手架"></a>3：安装 Hexo 脚手架</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># mac</span></span><br><span class="line">sudo npm install hexo-cli -g </span><br><span class="line"></span><br><span class="line"><span class="comment"># win</span></span><br><span class="line">npm install hexo-cli -g </span><br></pre></td></tr></table></figure><p>mac本下载需要前面加上 sudo 以管理员身份安装</p><p>win电脑的可以直接使用 npm 安装</p><h2 id="4：初始化hexo项目"><a href="#4：初始化hexo项目" class="headerlink" title="4：初始化hexo项目"></a>4：初始化hexo项目</h2><p>你可以先创建一个文件夹myblog，然后到这个文件夹下打开终端</p><p><img src="http://lc-u11pv6wa.cn-n1.lcfile.com/IE78nAxvQ8A10asIkprw60KgeeiYrP0w/init.jpg" alt="image"></p><p>执行命令 <code>hexo init blog</code></p><p><img src="http://lc-u11pv6wa.cn-n1.lcfile.com/6HqoThxWWilFTR9zIUNwBc7TrT9sLWmM/hexoinit.jpg" alt="image"></p><p>执行完命令后会自动生成一个文件夹 cd 到文件夹下，并执行 npm install 安装组件</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> blog <span class="comment"># 进入到blog文件夹</span></span><br><span class="line"></span><br><span class="line">npm install <span class="comment"># 安装组件</span></span><br></pre></td></tr></table></figure><p><img src="http://lc-u11pv6wa.cn-n1.lcfile.com/q1oCVmeRdge9aO1h8F49KSApG8pr1RBH/npmInit.jpg" alt="image"></p><p>启动本地服务器进行预览</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure><p><img src="http://lc-u11pv6wa.cn-n1.lcfile.com/MNflE9971bvYFRFpErvPn5NBpnDDkBy3/server.jpg" alt="image"></p><p><code>http://localhost:4000</code> 复制浏览器打开</p><p><img src="http://lc-u11pv6wa.cn-n1.lcfile.com/G8j8DgQJtRASxgI2xqnNa7RYMIzU28Iw/hexodemo.png" alt="image"></p><h2 id="5：创建-git-仓库"><a href="#5：创建-git-仓库" class="headerlink" title="5：创建 git 仓库"></a>5：创建 git 仓库</h2><p><img src="http://lc-u11pv6wa.cn-n1.lcfile.com/OeMfdY7lrxd8kkgKsJDvmFQNRChDjSlV/gitee.jpg" alt="image"></p><p>修改配置文件 _config.yml</p><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 这里是写你创建仓库生成的仓库地址</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">http://kang-wenrui-aeary.gitee.io/blog/</span></span><br><span class="line"><span class="comment"># 以你创建的仓库名为准</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/blog/</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># 文件末尾的 Deployment 部分，修改成如下</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">git@gitee.com:kang-wenrui-aeary/blog.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><p>这里推送到远程仓库需要下载一个插件 hexo-deployer-git</p><p>执行命令</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>完成后运行 hexo d 将网站上传部署到 gitee上。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo cl</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><h2 id="6：网站部署"><a href="#6：网站部署" class="headerlink" title="6：网站部署"></a>6：网站部署</h2><p>刷新gitee仓库</p><p><img src="http://lc-u11pv6wa.cn-n1.lcfile.com/mSWUmuE2OkqakQRX315XTYfplln8bwbJ/gitpage.jpg" alt="image"></p><p>点开服务中的Gitee Pages</p><p><img src="http://lc-u11pv6wa.cn-n1.lcfile.com/aQ8EVln4b6ia01OuD0gFBJY48L44zEqL/fuwu.jpg" alt="image"></p><p>直接点击启动等待一会</p><p><img src="http://lc-u11pv6wa.cn-n1.lcfile.com/d0nV7FebDRKNbhvnT0pt3O3f7GLTSH6P/qidong.jpg" alt="image"></p><h1 id="至此网站就部署成功，更多内容静待后续更新"><a href="#至此网站就部署成功，更多内容静待后续更新" class="headerlink" title="至此网站就部署成功，更多内容静待后续更新"></a>至此网站就部署成功，更多内容静待后续更新</h1>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
